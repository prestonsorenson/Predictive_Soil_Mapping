#load library
library(RSAGA)
library(raster)
library(dplyr)
library(rgdal)

t_val=1000
focal_area=25

#set work directory
project_name='HGV'
directory="/home/preston/OneDrive/Projects/Hebert_Grain_Ventures/Data/LiDAR/GeoTIFF_5m/"
dem='hgv_dem_5m.vrt'

setwd(directory)

dem.raster=raster(dem)

#create directories for specific output file types
dir.create("Terrain")

dem.filepath <- paste(directory, dem, sep='/')

output.directory <-  paste(directory, 'Terrain/', sep='/')

dem.sgrd.filepath <- paste0(output.directory,"dem.sgrd")


res.vector <- res(dem.raster)
res <- res.vector[1]




#########IMPORT DEM to .sgrd##########3

rsaga.geoprocessor("io_gdal", module = 0,
                   param = list(
                     FILES= dem.filepath,
                     GRIDS= dem.sgrd.filepath,
                     RESAMPLING= 0 ))


#########Slope, aspect, curvature########################

#Use Slope, Aspect, Curvature tool from SAGA on dem
rsaga.slope.asp.curv(in.dem=dem.filepath, 
                     out.slope =  "Terrain/slope.sgrd", 
                     out.aspect= "Terrain/aspect.sgrd",
                     out.cgene =  "Terrain/gen_curve.sgrd",
                     out.cprof =   "Terrain/prof.sgrd", 
                     out.cplan =  "Terrain/plan.sgrd", 
                     out.ctang = "Terrain/tang_curve.sgrd",
                     method = "poly2zevenbergen")



############# Relative Heights and Slope Positions######################
rsaga.geoprocessor("ta_morphometry", module = 14,
                   param = list(
                     DEM=dem.sgrd.filepath,
                     HO= "Terrain/Slope_Height.sgrd",
                     HU= "Terrain/Valley_Depth.sgrd",
                     NH= "Terrain/Norm_Height.sgrd",
                     SH= "Terrain/Stand_Height.sgrd",
                     MS= "Terrain/MidSlope_Pos.sgrd",
                     W=0.5,
                     T=t_val,
                     E=2
                    ))

##################Landcape Mapping#####################################
setwd(output.directory)

norm_height=readAll(raster('Norm_Height.sdat'))
prof=readAll(raster('prof.sdat'))
plan=readAll(raster('plan.sdat'))

#focal 25 m focal size
focal_size=ceiling(focal_area/res(norm_height)[1])
focal_size=ifelse(focal_size%%2==0, focal_size+1, focal_size)
focal_size=ifelse(focal_size<3, 3, focal_size)

#focal filter for sd values
nh_sd=focal(norm_height, w=matrix(1, focal_size,focal_size), fun=sd, pad=TRUE)

norm_height=crop(norm_height, nh_sd)
prof=crop(prof, nh_sd)
plan=crop(plan, nh_sd)

norm_height=rasterToPoints(norm_height)
prof=rasterToPoints(prof)
plan=rasterToPoints(plan)
nh_sd=rasterToPoints(nh_sd)

xy=norm_height[,1:2]
norm_height=norm_height[,-c(1:2)]
nh_sd=nh_sd[,-c(1:2)]
prof=prof[,-c(1:2)]
plan=plan[,-c(1:2)]

#Pennock 1987 sets concave at <-0.10 degrees per m which is -0.00174533 /m (curvature units for SAGA are in 1/m = 1 radian/m)
#Pennock 1987 plan<0 as convergent and >0 as divergent

#determine landscape slope class
depression=1-pnorm(norm_height, 0.1, nh_sd)
low=1-pnorm(norm_height, 0.3, nh_sd)
upper=pnorm(norm_height, 0.7, nh_sd)
mid=1-(low+upper)

depression_right=pnorm(norm_height, 0.3, nh_sd)
low=1-(depression+depression_right)

crest=pnorm(norm_height, 0.9, nh_sd)
crest_left=1-pnorm(norm_height, 0.7, nh_sd)
upper=1-(crest+crest_left)

#determine slope positions
prob_land=data.frame(depression, low, mid, upper, crest)

land=apply(prob_land, 1, function(x) names(x)[which.max(x)])
curve=ifelse(prof<(-0.00174533), 'concave', ifelse(prof>0.00174533, 'convex', 'flat'))
plan_curve=ifelse(plan<0, 'convergent', 'divergent')

plan_curve[land %in% c('crest', 'depression')] <- ""
plan_curve[curve %in% c('concave', 'convex')] <- ""

table(land)/sum(table(land))
table(curve)/sum(table(curve))
table(plan_curve)/sum(table(plan_curve))

landscape=paste(land, curve, plan_curve, sep='_')
(table(landscape)/sum(table(landscape)))*100

land_classes=c('depression_concave_', 'depression_flat_', 'depression_convex_',
               'low_concave_', 'low_flat_convergent','low_flat_divergent', 'low_convex_',
               'mid_concave_', 'mid_flat_convergent','mid_flat_divergent', 'mid_convex_',
               'upper_concave_', 'upper_flat_convergent', 'upper_flat_divergent','upper_convex_',
               'crest_concave_', 'crest_flat_', 'crest_convex_')
land_classes_5=c("depression",'low', 'mid', 'upper', 'crest')

land_classes=data.frame(land_classes, seq(1,18,1))
land_classes_5=data.frame(land_classes_5, seq(1,5,1))

colnames(land_classes)=c('landscape', 'code')
colnames(land_classes_5)=c('land', 'code')


landscape=data.frame(landscape, xy)
landscape_5=data.frame(land, xy)

landscape=merge(land_classes, landscape, by='landscape')
landscape_5=merge(land_classes_5, landscape_5, by='land')

landscape=landscape[,-1]
landscape_5=landscape_5[,-1]

coordinates(landscape)=~x+y
landscape=rasterFromXYZ(landscape)
plot(landscape)

coordinates(landscape_5)=~x+y
landscape_5=rasterFromXYZ(landscape_5)
plot(landscape_5)

Sys.Date()

#export landscape classes
writeRaster(landscape, paste(project_name, "landscape_position", Sys.Date(), sep="_"), format='GTiff', overwrite=TRUE)
writeRaster(landscape_5, paste(project_name, "landscape_position_5", Sys.Date(), sep="_"), format='GTiff', overwrite=TRUE)

